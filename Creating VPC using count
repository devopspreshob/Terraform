####---VPC Creation---####
 
resource "aws_vpc" "vpc" {
  cidr_block           = var.vpc_cidrblock
  instance_tenancy     = "default"
  enable_dns_support   = true
  enable_dns_hostnames = true
 
  tags = {
    Name = "${var.project_name}-${var.project_env}-vpc"
  }
}
 
####---Internet gateway---####   
resource "aws_internet_gateway" "internetgateway" {
  vpc_id = aws_vpc.vpc.id
 
  tags = {
    Name = "${var.project_name}-${var.project_env}-igw"
  }
}
 
####---AZ details---####    will fetch the details of availabe AZ
data "aws_availability_zones" "az" {
  state = "available"
}
 
####---public subnet creation---####     Using count here ....initially count.index = 0 , this loop will continue 3 time as count is 3,
CIDR block used here is of /16 , so cidrsubnet(var.vpc_cidrblock, 3, count.index)  three mentioned here will create subnet of CIDR /19 

resource "aws_subnet" "publicsubnet" {
  count                   = 3
  vpc_id                  = aws_vpc.vpc.id
  cidr_block              = cidrsubnet(var.vpc_cidrblock, 3, count.index)
  availability_zone       = data.aws_availability_zones.az.names["${count.index}"]
  map_public_ip_on_launch = true
  tags = {
    Name = "${var.project_name}-${var.project_env}-publicsubnet-${count.index + 1}"
  }
}
 
####---Private subnet Creation---####
resource "aws_subnet" "privatesubnet" {
  count                   = 3
  vpc_id                  = aws_vpc.vpc.id
  cidr_block              = cidrsubnet(var.vpc_cidrblock, 3, count.index + 3)
  availability_zone       = data.aws_availability_zones.az.names["${count.index}"]
  map_public_ip_on_launch = false
  tags = {
    Name = "${var.project_name}-${var.project_env}-privatesubnet-${count.index + 1}"
  }
}
 
####---NAT gateway Creation---####
resource "aws_eip" "elastic_ip" {
  vpc = true
  tags = {
    Name = "${var.project_name}-${var.project_env}-elastic_ip"
  }
}
 
resource "aws_nat_gateway" "nat_gateway" {
  allocation_id = aws_eip.elastic_ip.id
  subnet_id     = aws_subnet.publicsubnet[0].id
 
  tags = {
    Name = "${var.project_name}-${var.project_env}-nat_gateway"
  }
  depends_on = [aws_internet_gateway.internetgateway]
}
 
####---Public Route table Creation---####
resource "aws_route_table" "route_public" {
  vpc_id = aws_vpc.vpc.id
 
  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.internetgateway.id
  }
 
  tags = {
    Name = "${var.project_name}-${var.project_env}-route_public"
  }
}
 
####---Private Route table Creation---####
resource "aws_route_table" "route_private" {
  vpc_id = aws_vpc.vpc.id
 
  route {
    cidr_block = "0.0.0.0/0"
    nat_gateway_id = aws_nat_gateway.nat_gateway.id
  }
 
  tags = {
    Name = "${var.project_name}-${var.project_env}-route_private"
  }
}
 
####---Public route table association Creation---####
resource "aws_route_table_association" "public_subnet" {
  count          = 3
  subnet_id      = aws_subnet.publicsubnet["${count.index}"].id
  route_table_id = aws_route_table.route_public.id
}
 
####---Private route table association Creation---####
resource "aws_route_table_association" "private_subnet" {
  count          = 3
  subnet_id      = aws_subnet.privatesubnet["${count.index}"].id
  route_table_id = aws_route_table.route_private.id
}
 

    Name = "${var.project_name}-${var.project_env}-publicsubnet-${count.index + 1}"
  }
}

####---Private subnet Creation---####
resource "aws_subnet" "privatesubnet" {
  count                   = 3
  vpc_id                  = aws_vpc.vpc.id
  cidr_block              = cidrsubnet(var.vpc_cidrblock, 3, count.index + 3)
  availability_zone       = data.aws_availability_zones.az.names["${count.index}"]
  map_public_ip_on_launch = false
  tags = {
    Name = "${var.project_name}-${var.project_env}-privatesubnet-${count.index + 1}"
  }
}

####---NAT gateway Creation---####
resource "aws_eip" "elastic_ip" {
  vpc = true
  tags = {
    Name = "${var.project_name}-${var.project_env}-elastic_ip"
  }
}

resource "aws_nat_gateway" "nat_gateway" {
  allocation_id = aws_eip.elastic_ip.id
  subnet_id     = aws_subnet.publicsubnet[0].id

  tags = {
    Name = "${var.project_name}-${var.project_env}-nat_gateway"
  }
  depends_on = [aws_internet_gateway.internetgateway]
}

####---Public Route table Creation---####
resource "aws_route_table" "route_public" {
  vpc_id = aws_vpc.vpc.id

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.internetgateway.id
  }

  tags = {
    Name = "${var.project_name}-${var.project_env}-route_public"
  }
}

####---Private Route table Creation---####
resource "aws_route_table" "route_private" {
  vpc_id = aws_vpc.vpc.id

  route {
    cidr_block = "0.0.0.0/0"
    nat_gateway_id = aws_nat_gateway.nat_gateway.id
  }

  tags = {
    Name = "${var.project_name}-${var.project_env}-route_private"
  }
}

####---Public route table association Creation---####
resource "aws_route_table_association" "public_subnet" {
  count          = 3
  subnet_id      = aws_subnet.publicsubnet["${count.index}"].id
  route_table_id = aws_route_table.route_public.id
}

####---Private route table association Creation---####
resource "aws_route_table_association" "private_subnet" {
  count          = 3
  subnet_id      = aws_subnet.privatesubnet["${count.index}"].id
  route_table_id = aws_route_table.route_private.id
}

